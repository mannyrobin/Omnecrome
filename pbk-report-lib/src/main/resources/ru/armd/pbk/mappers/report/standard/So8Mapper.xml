<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ru.armd.pbk.mappers.report.standard.So8Mapper">

    <select id="getGridViews" resultType="ru.armd.pbk.views.report.So8View" parameterType="ru.armd.pbk.core.views.BaseGridViewParams">
        <include refid="ru.armd.pbk.mappers.CommonSql.pageSupportBegin"/>
        <![CDATA[
            SELECT
              ROW_NUMBER() OVER (ORDER BY ps.WORK_DATE) AS id
              , ps.WORK_DATE AS date
              , sum(tr.TS_CHECK_COUNT) AS tsCheckCount
              , sum(tr.EXEMPT_SKM_COUNT) AS exemptSkmCount
              , sum(tr.EXEMPT_SKMO_COUNT) AS exemptSkmoCount
              , sum(tr.EXEMPT_VESB_COUNT) AS exemptVesbCount
              , sum(tr.EXEMPT_VALIDLESS_COUNT) AS exemptValidlessCount
              , sum(tr.TICKET_SOLD_COUNT) AS ticketSoldCount
              , sum(tr.PROTOCOL_2500_COUNT) AS protocol2500Count
              , sum(tr.PROTOCOL_1000_COUNT) AS protocol1000Count
              , sum(tr.ORDINANCE_2500_COUNT) AS ordinance2500Count
              , sum(tr.ORDINANCE_1000_COUNT) AS ordinance1000Count
              , sum(tr.EXEMPT_OTHER_LPK_COUNT) AS exemptOtherLpkCount
              , sum(tr.PLANT_STOWAWAY_COUNT) AS getOffCount
              , (SELECT
						sum(pv.MGT_COUNT)
					FROM
						PBK_PLAN.PLAN_VENUES pv
					WHERE
						1 = 1
						]]><if test="filter.departmentId != null">
             				AND pv.DEPT_ID IN (${filter.departmentId})
            			</if><![CDATA[ AND pv.WORK_DATE = ps.WORK_DATE) AS mgtEmployeeCount
              , (SELECT
						sum(pv.GKUOP_COUNT)
					FROM
						PBK_PLAN.PLAN_VENUES pv
					WHERE
						1 = 1
						]]><if test="filter.departmentId != null">
             				AND pv.DEPT_ID IN (${filter.departmentId})
            			</if><![CDATA[ AND pv.WORK_DATE = ps.WORK_DATE AND pv.WORK_DATE = ps.WORK_DATE) AS gkuopEmployeeCount
              , sum(tr.DELIVERY_OVD_COUNT) AS deliveryOvdCount
            FROM
              PBK_TASK.TASKS t
              JOIN PBK_TASK.TASK_REPORTS tr ON t.ID = tr.TASK_ID
              JOIN PBK_PLAN.PLAN_SCHEDULES ps ON t.PLAN_SCHEDULE_ID = ps.ID
              LEFT JOIN PBK_NSI.DEPARTMENT_HISTS dh ON t.DEPT_ID = dh.HEAD_ID
            WHERE 1=1
              AND (dh.FOR_PLAN_USE = 1)
              AND (dh.V_END_DATE IS NULL OR dh.V_END_DATE >= [PBK_CORE].getVersionEndDate())
              AND (#{filter.dateFrom, jdbcType=DATE} IS NULL OR #{filter.dateFrom, jdbcType=DATE} <= cast(ps.WORK_DATE AS DATE))
              AND (#{filter.dateTo, jdbcType=DATE} IS NULL OR #{filter.dateTo, jdbcType=DATE} >= cast(ps.WORK_DATE AS DATE))
            ]]><if test="filter.departmentId != null">
              AND t.DEPT_ID IN (${filter.departmentId})
            </if><![CDATA[
              and (#{filter.deptAuthId} is null or t.DEPT_ID = #{filter.deptAuthId})
            GROUP BY ps.WORK_DATE
        ]]>
        <include refid="ru.armd.pbk.mappers.CommonSql.pageSupportEnd" />
    </select>
    
    <select id="getGridViewTotal" resultType="ru.armd.pbk.views.report.So8View">
    	<![CDATA[
    	select  sum(sub.tsCheckCount) AS tsCheckCount
        , sum(sub.exemptSkmCount) AS exemptSkmCount
        , sum(sub.exemptSkmoCount) AS exemptSkmoCount
        , sum(sub.exemptVesbCount) AS exemptVesbCount
        , sum(sub.exemptValidlessCount) AS exemptValidlessCount
        , sum(sub.ticketSoldCount) AS ticketSoldCount
        , sum(sub.protocol2500Count) AS protocol2500Count
        , sum(sub.protocol1000Count) AS protocol1000Count
        , sum(sub.ordinance2500Count) AS ordinance2500Count
        , sum(sub.ordinance1000Count) AS ordinance1000Count
        , sum(sub.mgtEmployeeCount) AS mgtEmployeeCount
        , sum(sub.gkuopEmployeeCount) AS gkuopEmployeeCount
        , sum(sub.deliveryOvdCount) AS deliveryOvdCount     
        , sum(sub.exemptOtherLpkCount) AS exemptOtherLpkCount
        , sum(sub.getOffCount) AS getOffCount
		from(
        SELECT
              ROW_NUMBER() OVER (ORDER BY ps.WORK_DATE) AS id
              , ps.WORK_DATE AS date
              , sum(tr.TS_CHECK_COUNT) AS tsCheckCount
              , sum(tr.EXEMPT_SKM_COUNT) AS exemptSkmCount
              , sum(tr.EXEMPT_SKMO_COUNT) AS exemptSkmoCount
              , sum(tr.EXEMPT_VESB_COUNT) AS exemptVesbCount
              , sum(tr.EXEMPT_VALIDLESS_COUNT) AS exemptValidlessCount
              , sum(tr.TICKET_SOLD_COUNT) AS ticketSoldCount
              , sum(tr.PROTOCOL_2500_COUNT) AS protocol2500Count
              , sum(tr.PROTOCOL_1000_COUNT) AS protocol1000Count
              , sum(tr.ORDINANCE_2500_COUNT) AS ordinance2500Count
              , sum(tr.ORDINANCE_1000_COUNT) AS ordinance1000Count
              , sum(tr.EXEMPT_OTHER_LPK_COUNT) AS exemptOtherLpkCount
              , sum(tr.PLANT_STOWAWAY_COUNT) AS getOffCount
              , (SELECT
						sum(pv.MGT_COUNT)
					FROM
						PBK_PLAN.PLAN_VENUES pv
					WHERE
						1 = 1
						]]><if test="departmentId != null">
             				AND pv.DEPT_ID IN (${departmentId})
            			</if><![CDATA[ AND pv.WORK_DATE = ps.WORK_DATE) AS mgtEmployeeCount
              , (SELECT
						sum(pv.GKUOP_COUNT)
					FROM
						PBK_PLAN.PLAN_VENUES pv
					WHERE
						1 = 1
						]]><if test="departmentId != null">
             				AND pv.DEPT_ID IN (${departmentId})
            			</if><![CDATA[ AND pv.WORK_DATE = ps.WORK_DATE AND pv.WORK_DATE = ps.WORK_DATE) AS gkuopEmployeeCount
              , sum(tr.DELIVERY_OVD_COUNT) AS deliveryOvdCount
            FROM
              PBK_TASK.TASKS t
              JOIN PBK_TASK.TASK_REPORTS tr ON t.ID = tr.TASK_ID
              JOIN PBK_PLAN.PLAN_SCHEDULES ps ON t.PLAN_SCHEDULE_ID = ps.ID
              LEFT JOIN PBK_NSI.DEPARTMENT_HISTS dh ON t.DEPT_ID = dh.HEAD_ID
            WHERE 1=1              
              AND (dh.FOR_PLAN_USE = 1)
              AND (dh.V_END_DATE IS NULL OR dh.V_END_DATE >= [PBK_CORE].getVersionEndDate())
              AND (#{dateFrom, jdbcType=DATE} IS NULL OR #{dateFrom, jdbcType=DATE} <= cast(ps.WORK_DATE AS DATE))
              AND (#{dateTo, jdbcType=DATE} IS NULL OR #{dateTo, jdbcType=DATE} >= cast(ps.WORK_DATE AS DATE))  
            ]]><if test="departmentId != null">
              AND t.DEPT_ID IN (${departmentId})
            </if><![CDATA[
              and (#{deptAuthId} is null or t.DEPT_ID = #{deptAuthId})            
            GROUP BY ps.WORK_DATE) as sub
         ]]>
    </select>

</mapper>
