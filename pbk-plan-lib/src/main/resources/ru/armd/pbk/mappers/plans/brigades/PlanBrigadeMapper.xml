<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ru.armd.pbk.mappers.plans.brigades.PlanBrigadeMapper">
    
    <select id="getBrigadeVenueViews" resultType="ru.armd.pbk.views.plans.brigades.BrigadeVenueView">
    	<include refid="ru.armd.pbk.mappers.CommonSql.pageSupportBegin" />
        <![CDATA[
			SELECT DISTINCT
				cv.ID as id,
				cvh.NAME as venueName,
-- 				cch.SHORT_NAME as countyName,
-- 				cdh.NAME as districtName,
				s.WORK_START_TIME as shiftWorkStart,
				s.WORK_END_TIME as shiftWorkEnd,
				s.ID as shiftId,
				cvh.[TPU] as tpu
			FROM
				PBK_NSI.CITY_VENUES cv 
				LEFT JOIN PBK_NSI.CITY_VENUE_HISTS cvh 
					ON (cv.ID = cvh.HEAD_ID 
						AND cvh.V_END_DATE = (
								SELECT MAX(cvh2.V_END_DATE)
								FROM PBK_NSI.CITY_VENUE_HISTS cvh2 
								WHERE cvh2.HEAD_ID = cvh.HEAD_ID 
									AND cast(cvh2.V_END_DATE as DATE) >= cast(#{filter.dateFrom} as DATE)
								  	AND cast(cvh2.V_START_DATE as DATE) <= cast(#{filter.dateTo} as DATE)
							)
					)
-- 				LEFT JOIN PBK_NSI.CITY_DISTRICTS cd ON (cvh.CITY_DISTRICT_ID = cd.ID)
-- 				LEFT JOIN PBK_NSI.CITY_DISTRICT_HISTS cdh ON (cd.ID = cdh.HEAD_ID AND cdh.V_END_DATE >= PBK_CORE.getVersionEndDate())
-- 				LEFT JOIN PBK_NSI.CITY_COUNTIES cc ON (cdh.PLAN_CITY_COUNTY_ID = cc.ID)
-- 				LEFT JOIN PBK_NSI.CITY_COUNTY_HISTS cch ON (cc.ID = cch.HEAD_ID AND cch.V_END_DATE >= PBK_CORE.getVersionEndDate())
				RIGHT JOIN PBK_NSI.SHIFTS s ON (
                                            s.COD = 'DAY' AND cvh.SHIFT_DAY = 1
                                            OR s.COD = 'I' AND cvh.SHIFT_I = 1
                                            OR s.COD = 'II' AND cvh.SHIFT_II = 1
                                            OR s.COD = 'III' AND cvh.SHIFT_III = 1
                                            OR s.COD = 'NIGHT' AND cvh.SHIFT_NIGHT = 1)
			WHERE cvh.DEPT_ID = #{filter.deptId}
			   	OR	(cvh.SHIFT_NIGHT = 1
					AND (cvh.TPU = 0
							or exists (select 1 from PBK_NSI.CITY_VENUE_DEPTS svdpt
										WHERE svdpt.DEPT_ID = #{filter.deptId}
											AND svdpt.CITY_VENUE_ID = cv.ID
											AND cast(svdpt.V_END_DATE as DATE) >= cast(#{filter.dateFrom} as DATE)
											AND cast(svdpt.V_START_DATE as DATE) <= cast(#{filter.dateTo} as DATE))
						)
					)
        ]]>
        <include refid="ru.armd.pbk.mappers.CommonSql.pageSupportEnd" />
    </select>
    
	<select id="getBrigadeShiftsForVenues" resultType="ru.armd.pbk.domain.plans.brigades.Brigade">
		<![CDATA[
			WITH DATESLIST AS
			(
			  SELECT cast(cast(#{params.filter.dateFrom} AS DATE)AS DATETIME) DATE_VALUE
			  UNION ALL
			  SELECT  DATE_VALUE + 1
			  FROM    DATESLIST   
			  WHERE   DATE_VALUE + 1 <= cast(#{params.filter.dateTo} AS DATE)
			)
			SELECT
				pv.ID as id,
				pv.DEPT_ID as deptId,
				pv.CITY_VENUE_ID as cityVenueId,
				pv.WORK_DATE as planDate,
				ISNULL(pv.GKUOP_COUNT, 0) as gkuopCount,
				ISNULL(pv.MGT_COUNT, 0) as mgtCount,
				pv.SHIFT_ID as shiftId,
				CAST (pv.IS_AGREE as bit) as isAgree,
				shifts.RESERVE_COUNT as shiftReserveCount,
				(SELECT
					ISNULL((SELECT
						COUNT(pschedule.ID)
					FROM
						PBK_PLAN.PLAN_SCHEDULES pschedule LEFT JOIN PBK_NSI.EMPLOYEES e ON (pschedule.EMPLOYEE_ID = e.ID AND e.IS_DELETE = 0) RIGHT JOIN PBK_NSI.EMPLOYEE_HISTS eh ON (e.ID = eh.HEAD_ID AND eh.V_END_DATE >= PBK_CORE.getVersionEndDate())
					WHERE
						eh.FOR_PLAN_USE = 1 AND (eh.FIRE_DATE IS NULL OR eh.FIRE_DATE >= pv.WORK_DATE) AND pschedule.DEPT_ID = pv.DEPT_ID AND pschedule.SHIFT_ID = pv.SHIFT_ID AND pschedule.WORK_DATE = pv.WORK_DATE
					       			AND EXISTS (SELECT 1 FROM PBK_NSI.EMPLOYEE_HISTS eh 
										WHERE cast(eh.V_END_DATE as DATE) >= cast(pschedule.WORK_DATE as DATE) 
											AND cast(eh.V_START_DATE as DATE) <= cast(pschedule.WORK_DATE as DATE)
												AND eh.DEPT_ID = pschedule.DEPT_ID
												AND eh.FOR_PLAN_USE = 1
												AND eh.HEAD_ID = pschedule.EMPLOYEE_ID        
					       			)
					       			AND EXISTS (SELECT 1 FROM PBK_NSI.EMP_DEPT_MOVES edm 
										WHERE cast(edm.PERIOD_END_DATE as DATE) >= cast(pschedule.WORK_DATE as DATE) 
											AND cast(edm.PERIOD_START_DATE as DATE) <= cast(pschedule.WORK_DATE as DATE)
												AND edm.DEPT_ID = pschedule.DEPT_ID
												AND edm.EMPLOYEE_ID = pschedule.EMPLOYEE_ID        
					       			)
						) -
					
					(SELECT
						SUM(pvenues.MGT_COUNT)
					FROM
										PBK_PLAN.PLAN_VENUES pvenues LEFT JOIN PBK_NSI.CITY_VENUES cv ON (pvenues.CITY_VENUE_ID = cv.ID) LEFT JOIN PBK_NSI.CITY_VENUE_HISTS cvh ON (cv.ID = cvh.HEAD_ID AND cvh.V_END_DATE = (SELECT MAX(dh2.[V_END_DATE]) FROM [PBK_NSI].[CITY_VENUE_HISTS] dh2 WHERE cvh.HEAD_ID = dh2.HEAD_ID))
									LEFT JOIN PBK_NSI.CITY_DISTRICTS cd ON (cvh.CITY_DISTRICT_ID = cd.ID) LEFT JOIN PBK_NSI.CITY_DISTRICT_HISTS cdh ON (cd.ID = cdh.HEAD_ID AND cdh.V_END_DATE >= PBK_CORE.getVersionEndDate())
									LEFT JOIN PBK_NSI.CITY_COUNTIES cc ON (cdh.PLAN_CITY_COUNTY_ID = cc.ID) LEFT JOIN PBK_NSI.CITY_COUNTY_HISTS cch ON (cc.ID = cch.HEAD_ID AND cch.V_END_DATE >= PBK_CORE.getVersionEndDate())
									RIGHT JOIN PBK_NSI.SHIFTS s ON (s.COD = 'DAY' AND cvh.SHIFT_DAY = 1 OR s.COD = 'I' AND cvh.SHIFT_I = 1 OR s.COD = 'II' AND cvh.SHIFT_II = 1 OR s.COD = 'III' AND cvh.SHIFT_III = 1 OR s.COD = 'NIGHT' AND cvh.SHIFT_NIGHT = 1)
					WHERE
						pvenues.DEPT_ID = pv.DEPT_ID AND pvenues.WORK_DATE = pv.WORK_DATE AND cvh.V_END_DATE >= pv.WORK_DATE AND pvenues.SHIFT_ID = pv.SHIFT_ID AND s.ID = pv.SHIFT_ID), 0)) as diff,
	            (SELECT
					count(t.ID)
				FROM
					PBK_TASK.TASKS t LEFT JOIN PBK_PLAN.PLAN_VENUES pvenues ON (t.PLAN_VENUE_ID = pvenues.ID)
		            	JOIN PBK_TASK.TASK_STATES ts on t.TASK_STATE_ID = ts.ID
				WHERE ts.COD NOT IN ('IN_RESERVE', 'CANCELED')
					AND t.PLAN_VENUE_ID IS NOT NULL
					AND t.PLAN_VENUE_ID = pv.ID) as taskCount
				,CASE WHEN 
					(
						SELECT COUNT(*) 
						FROM PBK_PLAN.PLAN_SCHEDULES ps 
						WHERE ps.SHIFT_ID = pv.SHIFT_ID
							AND ps.WORK_DATE = pv.WORK_DATE
							AND ps.DEPT_ID = pv.DEPT_ID
			       			AND EXISTS (SELECT 1 FROM PBK_NSI.EMPLOYEE_HISTS eh 
								WHERE cast(eh.V_END_DATE as DATE) >= cast(ps.WORK_DATE as DATE) 
									AND cast(eh.V_START_DATE as DATE) <= cast(ps.WORK_DATE as DATE)
										AND eh.DEPT_ID = ps.DEPT_ID
										AND eh.FOR_PLAN_USE = 1
										AND eh.HEAD_ID = ps.EMPLOYEE_ID        
			       			)
			       			AND EXISTS (SELECT 1 FROM PBK_NSI.EMP_DEPT_MOVES edm 
								WHERE cast(edm.PERIOD_END_DATE as DATE) >= cast(ps.WORK_DATE as DATE) 
									AND cast(edm.PERIOD_START_DATE as DATE) <= cast(ps.WORK_DATE as DATE)
										AND edm.DEPT_ID = ps.DEPT_ID
										AND edm.EMPLOYEE_ID = ps.EMPLOYEE_ID        
			       			)
					)
					>=
					(
						SELECT SUM(pv2.MGT_COUNT) 
						FROM PBK_PLAN.PLAN_VENUES pv2 
						WHERE pv2.SHIFT_ID = pv.SHIFT_ID
							AND pv2.WORK_DATE = pv.WORK_DATE
							AND pv2.DEPT_ID = pv.DEPT_ID
					) 
				THEN 1 ELSE 0 END isEnough,
				pv.IS_MANUAL as manual
			FROM
	           	PBK_PLAN.PLAN_VENUES pv
	           	LEFT JOIN PBK_NSI.SHIFTS shifts ON (pv.SHIFT_ID = shifts.ID)
			WHERE
	           	pv.DEPT_ID = #{params.filter.deptId} AND pv.MGT_COUNT IS NOT NULL
	           	AND (#{params.filter.dateFrom, jdbcType=DATE} is null or #{params.filter.dateFrom, jdbcType=DATE} <= cast(pv.WORK_DATE as DATE))
		        AND (#{params.filter.dateTo, jdbcType=DATE} is null or #{params.filter.dateTo, jdbcType=DATE} >= cast(pv.WORK_DATE as DATE))
	           	AND pv.CITY_VENUE_ID IN
	           	]]><foreach collection="venues" open="(" close=")" separator="," item="venue">
	           		#{venue.id}
	           	</foreach>
		<![CDATA[
	        UNION
				SELECT DISTINCT
					NULL as id,
					NULL as deptId,
					cv.ID as cityVenueId,
					cast(DATESLIST.DATE_VALUE as DATE) as planDate,
					NULL as gkuopCount,
					NULL as mgtCount,
					NULL as shiftId,
					(
						SELECT CASE ISNULL(MAX(cvh.V_END_DATE), 0) WHEN 0 THEN 0 ELSE 1 END
						FROM PBK_NSI.CITY_VENUE_HISTS cvh
						WHERE cvh.HEAD_ID = cv.ID 
								AND cast(cvh.V_END_DATE as DATE) >= cast(DATESLIST.DATE_VALUE as DATE) 
								AND cast(cvh.V_START_DATE as DATE) <= cast(DATESLIST.DATE_VALUE as DATE)
								AND (cvh.DEPT_ID = #{params.filter.deptId} OR 
										(
											cvh.SHIFT_NIGHT = 1
											AND (
												cvh.TPU = 0
												or exists (select 1 from PBK_NSI.CITY_VENUE_DEPTS svdpt WHERE svdpt.DEPT_ID = #{params.filter.deptId} AND svdpt.CITY_VENUE_ID = cv.ID
													AND cast(DATESLIST.DATE_VALUE as DATE) between cast(svdpt.V_START_DATE as DATE) AND cast(svdpt.V_END_DATE as DATE))
											)
										)
									)
					) as isAgree,
					0 as shiftReserveCount,
					0 as diff,
					0 as taskCount,
					NULL isEnough,
					0 as manual
				FROM DATESLIST, PBK_NSI.CITY_VENUES cv 
	           	WHERE cv.ID IN
		           	]]><foreach collection="venues" open="(" close=")" separator="," item="venue">
		           		#{venue.id}
		           	</foreach>
		<![CDATA[
				OPTION (MAXRECURSION 0)
		]]>
    </select>
    
	<select id="getBrigadeReserveCounts" resultType="ru.armd.pbk.domain.plans.brigades.ReserveCount">
		<![CDATA[
			WITH DATESLIST AS
			(
			  SELECT cast(cast(#{params.filter.dateFrom} AS DATE)AS DATETIME) DATE_VALUE
			  UNION ALL
			  SELECT  DATE_VALUE + 1
			  FROM    DATESLIST   
			  WHERE   DATE_VALUE + 1 <= cast(#{params.filter.dateTo} AS DATE)
			)
			SELECT
				pv.WORK_DATE as planDate,
				pv.SHIFT_ID as shiftId,
				(
					SELECT COUNT(*) 
					FROM PBK_PLAN.PLAN_SCHEDULES ps 
					WHERE ps.SHIFT_ID = pv.SHIFT_ID
						AND ps.WORK_DATE = pv.WORK_DATE
						AND ps.DEPT_ID = pv.DEPT_ID
		       			AND EXISTS (SELECT 1 FROM PBK_NSI.EMPLOYEE_HISTS eh 
							WHERE cast(eh.V_END_DATE as DATE) >= cast(ps.WORK_DATE as DATE) 
								AND cast(eh.V_START_DATE as DATE) <= cast(ps.WORK_DATE as DATE)
									AND eh.DEPT_ID = ps.DEPT_ID
									AND eh.FOR_PLAN_USE = 1
									AND eh.HEAD_ID = ps.EMPLOYEE_ID        
		       			)
		       			AND EXISTS (SELECT 1 FROM PBK_NSI.EMP_DEPT_MOVES edm 
							WHERE cast(edm.PERIOD_END_DATE as DATE) >= cast(ps.WORK_DATE as DATE) 
								AND cast(edm.PERIOD_START_DATE as DATE) <= cast(ps.WORK_DATE as DATE)
									AND edm.DEPT_ID = ps.DEPT_ID
									AND edm.EMPLOYEE_ID = ps.EMPLOYEE_ID        
		       			)
				) as employeeCount, 
				(
					SELECT SUM(pv2.MGT_COUNT) 
					FROM PBK_PLAN.PLAN_VENUES pv2 
					WHERE 
						exists (
							select 1 from PBK_NSI.CITY_VENUE_HISTS cvh 
								JOIN PBK_NSI.SHIFTS s ON (s.ID = pv2.SHIFT_ID) AND (s.COD = 'DAY' AND cvh.SHIFT_DAY = 1 OR s.COD = 'I' AND cvh.SHIFT_I = 1 OR s.COD = 'II' AND cvh.SHIFT_II = 1 OR s.COD = 'III' AND cvh.SHIFT_III = 1 OR s.COD = 'NIGHT' AND cvh.SHIFT_NIGHT = 1)
							where cvh.HEAD_ID = pv2.CITY_VENUE_ID
								and cast(pv2.WORK_DATE as DATE) between cast(cvh.V_START_DATE as DATE) and cast(cvh.V_END_DATE as DATE)
							) 
						AND pv2.SHIFT_ID = pv.SHIFT_ID
						AND pv2.WORK_DATE = pv.WORK_DATE
						AND pv2.DEPT_ID = pv.DEPT_ID
				) 
				as planVenuesCount
			FROM
				(
					SELECT DISTINCT pv2.SHIFT_ID, pv2.WORK_DATE, pv2.DEPT_ID 
	           		FROM PBK_PLAN.PLAN_VENUES pv2
					WHERE
						exists (
							select 1 from PBK_NSI.CITY_VENUE_HISTS cvh 
								JOIN PBK_NSI.SHIFTS s ON (s.ID = pv2.SHIFT_ID) AND (s.COD = 'DAY' AND cvh.SHIFT_DAY = 1 OR s.COD = 'I' AND cvh.SHIFT_I = 1 OR s.COD = 'II' AND cvh.SHIFT_II = 1 OR s.COD = 'III' AND cvh.SHIFT_III = 1 OR s.COD = 'NIGHT' AND cvh.SHIFT_NIGHT = 1)
							where cvh.HEAD_ID = pv2.CITY_VENUE_ID
								and cast(pv2.WORK_DATE as DATE) between cast(cvh.V_START_DATE as DATE) and cast(cvh.V_END_DATE as DATE)
							) 
			           	AND pv2.DEPT_ID = #{params.filter.deptId} AND pv2.MGT_COUNT IS NOT NULL
			           	AND (#{params.filter.dateFrom, jdbcType=DATE} is null or #{params.filter.dateFrom, jdbcType=DATE} <= cast(pv2.WORK_DATE as DATE))
				        AND (#{params.filter.dateTo, jdbcType=DATE} is null or #{params.filter.dateTo, jdbcType=DATE} >= cast(pv2.WORK_DATE as DATE))
				) pv
			OPTION (MAXRECURSION 0)
		]]>
    </select>

	<select id="checkBrigadeShiftsForVenues" resultType="ru.armd.pbk.domain.plans.brigades.Brigade">
		<![CDATA[
			SELECT * FROM (
				SELECT
					pv.ID as id,
					pv.DEPT_ID as deptId,
					pv.CITY_VENUE_ID as cityVenueId,
					pv.WORK_DATE as planDate,
					ISNULL(pv.GKUOP_COUNT, 0) as gkuopCount,
					ISNULL(pv.MGT_COUNT, 0) as mgtCount,
					pv.SHIFT_ID as shiftId,
					CASE WHEN 
						(
							SELECT COUNT(*) 
							FROM PBK_PLAN.PLAN_SCHEDULES ps 
							WHERE 
					           	cast(ps.WORK_DATE as DATE) = cast(pv.WORK_DATE as DATE)
								AND ps.DEPT_ID = pv.DEPT_ID
				       			AND ps.SHIFT_ID = pv.SHIFT_ID
				       			AND EXISTS (SELECT 1 FROM PBK_NSI.EMPLOYEE_HISTS eh 
									WHERE cast(eh.V_END_DATE as DATE) >= cast(ps.WORK_DATE as DATE) 
										AND cast(eh.V_START_DATE as DATE) <= cast(ps.WORK_DATE as DATE)
											AND eh.DEPT_ID = ps.DEPT_ID
											AND eh.FOR_PLAN_USE = 1
											AND eh.HEAD_ID = ps.EMPLOYEE_ID        
				       			)
				       			AND EXISTS (SELECT 1 FROM PBK_NSI.EMP_DEPT_MOVES edm 
									WHERE cast(edm.PERIOD_END_DATE as DATE) >= cast(ps.WORK_DATE as DATE) 
										AND cast(edm.PERIOD_START_DATE as DATE) <= cast(ps.WORK_DATE as DATE)
											AND edm.DEPT_ID = ps.DEPT_ID
											AND edm.EMPLOYEE_ID = ps.EMPLOYEE_ID        
				       			)
						)
						>=
						(
							SELECT SUM(pv2.MGT_COUNT) 
							FROM PBK_PLAN.PLAN_VENUES pv2 
							WHERE
								exists (
									select 1 from PBK_NSI.CITY_VENUE_HISTS cvh 
										JOIN PBK_NSI.SHIFTS s ON (s.ID = pv2.SHIFT_ID) AND (s.COD = 'DAY' AND cvh.SHIFT_DAY = 1 OR s.COD = 'I' AND cvh.SHIFT_I = 1 OR s.COD = 'II' AND cvh.SHIFT_II = 1 OR s.COD = 'III' AND cvh.SHIFT_III = 1 OR s.COD = 'NIGHT' AND cvh.SHIFT_NIGHT = 1)
									where cvh.HEAD_ID = pv2.CITY_VENUE_ID
										and cast(pv2.WORK_DATE as DATE) between cast(cvh.V_START_DATE as DATE) and cast(cvh.V_END_DATE as DATE)
									) 
								AND pv2.SHIFT_ID = pv.SHIFT_ID
								AND pv2.WORK_DATE = pv.WORK_DATE
								AND pv2.DEPT_ID = pv.DEPT_ID
						) 
					THEN 1 ELSE 0 END isEnough,
					dpt.NAME as deptName
				FROM
		           	PBK_PLAN.PLAN_VENUES pv
		           	JOIN PBK_NSI.DEPARTMENT_HISTS dpt on pv.DEPT_ID = dpt.HEAD_ID and dpt.V_END_DATE >= PBK_CORE.getVersionEndDate()
					JOIN PBK_NSI.CITY_VENUE_HISTS cvh on cvh.HEAD_ID = pv.CITY_VENUE_ID
					JOIN PBK_NSI.SHIFTS s ON (s.ID = pv.SHIFT_ID) AND (s.COD = 'DAY' AND cvh.SHIFT_DAY = 1 OR s.COD = 'I' AND cvh.SHIFT_I = 1 OR s.COD = 'II' AND cvh.SHIFT_II = 1 OR s.COD = 'III' AND cvh.SHIFT_III = 1 OR s.COD = 'NIGHT' AND cvh.SHIFT_NIGHT = 1)
				WHERE
					exists (
						select 1 from PBK_NSI.CITY_VENUE_HISTS cvh 
							JOIN PBK_NSI.SHIFTS s ON (s.ID = pv.SHIFT_ID) AND (s.COD = 'DAY' AND cvh.SHIFT_DAY = 1 OR s.COD = 'I' AND cvh.SHIFT_I = 1 OR s.COD = 'II' AND cvh.SHIFT_II = 1 OR s.COD = 'III' AND cvh.SHIFT_III = 1 OR s.COD = 'NIGHT' AND cvh.SHIFT_NIGHT = 1)
						where cvh.HEAD_ID = pv.CITY_VENUE_ID
							and cast(pv.WORK_DATE as DATE) between cast(cvh.V_START_DATE as DATE) and cast(cvh.V_END_DATE as DATE)
						) 
		           	AND (#{shiftId} is null or pv.SHIFT_ID = #{shiftId})
		           	AND (#{deptId} is null or pv.DEPT_ID = #{deptId})
		           	AND pv.MGT_COUNT IS NOT NULL
		           	AND (#{dateFrom, jdbcType=DATE} is null or #{dateFrom, jdbcType=DATE} <= cast(pv.WORK_DATE as DATE))
			        AND (#{dateTo, jdbcType=DATE} is null or #{dateTo, jdbcType=DATE} >= cast(pv.WORK_DATE as DATE))
			) t
			WHERE t.isEnough = 0
		]]>
    </select>
	
	<insert id="insert" parameterType="ru.armd.pbk.domain.plans.brigades.Brigade" keyProperty="id" keyColumn="id">
		<![CDATA[
        INSERT INTO
        	PBK_PLAN.PLAN_VENUES(
                ]]><include refid="ru.armd.pbk.mappers.CommonSql.tplInsertAuditFields" /><![CDATA[
	        	,DEPT_ID
				,WORK_DATE
				,CITY_VENUE_ID
				,SHIFT_ID
				,MGT_COUNT
				,GKUOP_COUNT
        ) VALUES (
               ]]><include refid="ru.armd.pbk.mappers.CommonSql.tplInsertAuditValues" /><![CDATA[
	        	, #{deptId}
	        	, #{planDate}
	        	, #{cityVenueId}
	        	, #{shiftId}
	        	, #{mgtCount}
	        	, #{gkuopCount}
        )
        ]]>
		<selectKey order="AFTER" resultType="long" keyProperty="id">
			<![CDATA[
              SELECT IDENT_CURRENT( 'PBK_PLAN.PLAN_VENUES' ) as id
            ]]>
		</selectKey>
	</insert>

	<update id="update" parameterType="ru.armd.pbk.domain.plans.brigades.Brigade">
		<![CDATA[
			UPDATE
				PBK_PLAN.PLAN_VENUES SET
				]]><include refid="ru.armd.pbk.mappers.CommonSql.tplUpdateAuditValues" /><![CDATA[
				, MGT_COUNT = #{mgtCount}
	        	, GKUOP_COUNT = #{gkuopCount}
	        	, IS_MANUAL = 1
			WHERE
			  ID = #{id}
        ]]>
	</update>
	
	<select id="getById" resultType="ru.armd.pbk.domain.plans.brigades.Brigade">
		<![CDATA[
			SELECT
            	ID as id,
            	DEPT_ID as deptId,
				WORK_DATE as planDate,				
				CITY_VENUE_ID as cityVenueId,
				SHIFT_ID as shiftId,
				MGT_COUNT as mgtCount,
				GKUOP_COUNT as gkuopCount
			FROM
				PBK_PLAN.PLAN_VENUES
			WHERE
               ID = #{id}
        ]]>
    </select>
    
    <select id="getSelectItems" resultType="ru.armd.pbk.core.views.SelectItem">
        SELECT
        	pv.ID as id,
			CONCAT(cvh.NAME, ' (Бригада:', pv.MGT_COUNT , '/', pv.GKUOP_COUNT, '; Смена: ', s.NAME, ')') as name
        FROM
        	PBK_PLAN.PLAN_VENUES pv LEFT JOIN PBK_NSI.CITY_VENUES cv ON (pv.CITY_VENUE_ID = cv.ID) LEFT JOIN PBK_NSI.CITY_VENUE_HISTS cvh ON (cv.ID = cvh.HEAD_ID AND cvh.V_END_DATE >= PBK_CORE.getVersionEndDate())
        	LEFT JOIN PBK_NSI.SHIFTS s ON (pv.SHIFT_ID = s.ID)
        WHERE
        	(#{deptId} IS NULL OR pv.DEPT_ID = #{deptId})
        	AND (#{shiftId} IS NULL OR pv.SHIFT_ID = #{shiftId})
        	AND (#{workDate, jdbcType=DATE} = cast(pv.WORK_DATE as DATE))
        	AND (#{scheduleId} IS NULL OR pv.SHIFT_ID = (
        		SELECT
        			SHIFT_ID
        		FROM
        			PBK_PLAN.PLAN_SCHEDULES
        		WHERE
        			ID = #{scheduleId})
        	)
        	OR (#{currentId} IS NOT NULL AND pv.ID = #{currentId})
    </select>
    
	<select id="getBrigades" resultType="ru.armd.pbk.domain.plans.brigades.Brigade">
		<![CDATA[
			SELECT
				pv.ID as id,
				pv.DEPT_ID as deptId,
				pv.CITY_VENUE_ID as cityVenueId,
				pv.WORK_DATE as planDate,
				pv.GKUOP_COUNT as gkuopCount,
				pv.MGT_COUNT as mgtCount,
				pv.SHIFT_ID as shiftId,
				pv.IS_AGREE as isAgree,
				(
                	SELECT DISTINCT cast(cdh.PLAN_CITY_COUNTY_ID as varchar)+ ',' AS [text()]
					FROM PBK_NSI.CITY_VENUE_DISTRICTS cvd 
						JOIN PBK_NSI.CITY_DISTRICT_HISTS cdh on cvd.CITY_DISTRICT_ID = cdh.HEAD_ID
					WHERE cvd.CITY_VENUE_ID = pv.CITY_VENUE_ID
						and cast(pv.WORK_DATE as DATE) BETWEEN cvd.V_START_DATE AND cvd.V_END_DATE
						and cast(pv.WORK_DATE as DATE) BETWEEN cdh.V_START_DATE AND cdh.V_END_DATE
	                FOR XML PATH ('')
		        ) countyIds				
			FROM
	           	PBK_PLAN.PLAN_VENUES pv
			WHERE
				exists (
					select 1 from PBK_NSI.CITY_VENUE_HISTS cvh 
						JOIN PBK_NSI.SHIFTS s ON (s.ID = pv.SHIFT_ID) AND (s.COD = 'DAY' AND cvh.SHIFT_DAY = 1 OR s.COD = 'I' AND cvh.SHIFT_I = 1 OR s.COD = 'II' AND cvh.SHIFT_II = 1 OR s.COD = 'III' AND cvh.SHIFT_III = 1 OR s.COD = 'NIGHT' AND cvh.SHIFT_NIGHT = 1)
					where cvh.HEAD_ID = pv.CITY_VENUE_ID
						and cast(pv.WORK_DATE as DATE) between cast(cvh.V_START_DATE as DATE) and cast(cvh.V_END_DATE as DATE)
					) 
	           	AND pv.DEPT_ID = #{deptId}
	           	AND #{workDate} = cast(pv.WORK_DATE as DATE)
	           	AND (#{shiftId} IS NULL OR pv.SHIFT_ID = #{shiftId})
        ]]>
    </select>

	<delete id="removeBrigadesByWorkDate">
		<![CDATA[
			DELETE FROM PBK_PLAN.PLAN_VENUES
			WHERE
			  DEPT_ID = #{deptId}
			  AND cast(WORK_DATE as DATE) = cast(#{workDate} as DATE) AND (IS_MANUAL = 0 OR #{resetManualData} = 1)
        ]]>
	</delete>
	
	<select id="getManualBrigades" resultType="ru.armd.pbk.domain.plans.brigades.Brigade">
		<![CDATA[
			SELECT
				pv.ID as id,
				pv.DEPT_ID as deptId,
				pv.CITY_VENUE_ID as cityVenueId,
				pv.WORK_DATE as planDate,
				pv.GKUOP_COUNT as gkuopCount,
				pv.MGT_COUNT as mgtCount,
				pv.SHIFT_ID as shiftId,
				pv.IS_AGREE as isAgree,
				(
                	SELECT DISTINCT cast(cdh.PLAN_CITY_COUNTY_ID as varchar)+ ',' AS [text()]
					FROM PBK_NSI.CITY_VENUE_DISTRICTS cvd 
						JOIN PBK_NSI.CITY_DISTRICT_HISTS cdh on cvd.CITY_DISTRICT_ID = cdh.HEAD_ID
					WHERE cvd.CITY_VENUE_ID = pv.CITY_VENUE_ID
						and cast(pv.WORK_DATE as DATE) BETWEEN cvd.V_START_DATE AND cvd.V_END_DATE
						and cast(pv.WORK_DATE as DATE) BETWEEN cdh.V_START_DATE AND cdh.V_END_DATE
	                FOR XML PATH ('')
		        ) countyIds			
			FROM PBK_PLAN.PLAN_VENUES pv
			WHERE
			  pv.DEPT_ID = #{deptId}
			  AND cast(pv.WORK_DATE as DATE) = cast(#{workDate} as DATE) AND pv.IS_MANUAL = 1
        ]]>
    </select>

	<update id="approveBrigade">
		<![CDATA[
			UPDATE PBK_PLAN.PLAN_VENUES 
			SET IS_AGREE = #{bApprove}, UPDATE_USER_ID = #{userId}, UPDATE_DATE = GETDATE()
			WHERE
			  WORK_DATE >= #{startDate} AND WORK_DATE <= #{endDate} AND DEPT_ID = #{deptId}
        ]]>
	</update>
    
    <select id="getBrigadeByParams" resultType="ru.armd.pbk.domain.plans.brigades.Brigade">
		<![CDATA[
			SELECT
            	ID as id,
            	DEPT_ID as deptId,
				WORK_DATE as planDate,				
				CITY_VENUE_ID as cityVenueId,
				SHIFT_ID as shiftId,
				MGT_COUNT as mgtCount,
				GKUOP_COUNT as gkuopCount,
				IS_AGREE as isAgree
			FROM
				PBK_PLAN.PLAN_VENUES
			WHERE
               DEPT_ID = #{deptId} AND CITY_VENUE_ID = #{cityVenueId} 
               AND SHIFT_ID = #{shiftId} AND cast(WORK_DATE as DATE) = cast(#{workDate} as DATE)
        ]]>
    </select>

	<select id="findBrigadeImportByNames" resultType="ru.armd.pbk.core.views.SelectItem">
        <![CDATA[
	        SELECT dh.HEAD_ID AS id, 1 as type
	        FROM
	          PBK_NSI.DEPARTMENT_HISTS dh
	        WHERE dh.V_END_DATE >= [PBK_CORE].getVersionEndDate() 
	          	AND dh.NAME = #{deptName}

			union

	        SELECT cvh.HEAD_ID AS id, 2 as type
	        FROM
	          PBK_NSI.CITY_VENUE_HISTS cvh
	        WHERE cvh.V_END_DATE >= [PBK_CORE].getVersionEndDate()
				AND cvh.NAME = #{venueName}
			
			union
			
			SELECT s.ID AS id, 3 as type
	        FROM
	          PBK_NSI.SHIFTS s
	        WHERE FORMAT(s.WORK_START_TIME, 'HH:mm') + ' - ' + FORMAT(s.WORK_END_TIME, 'HH:mm') = #{shiftHours}
	        
	        order by type asc
        ]]>
	</select>
	
	<select id="checkBrigadeForTask" resultType="ru.armd.pbk.domain.plans.brigades.Brigade">
		<![CDATA[
		SELECT distinct dh.NAME as deptName
			FROM PBK_TASK.TASKS t
			JOIN PBK_TASK.TASK_STATES ts on t.TASK_STATE_ID = ts.ID
			JOIN PBK_PLAN.PLAN_VENUES pv on t.PLAN_VENUE_ID = pv.ID 
			JOIN PBK_NSI.DEPARTMENT_HISTS dh on dh.HEAD_ID = pv.DEPT_ID and dh.V_END_DATE >= PBK_CORE.getVersionEndDate()
			WHERE ts.COD in ('IN_PROGRESS', 'DONE', 'CLOSED') 
				AND (#{deptId} is null or pv.DEPT_ID = #{deptId})		     
		        AND (#{dateFrom, jdbcType=DATE} is null or #{dateFrom, jdbcType=DATE} <= cast(pv.WORK_DATE as DATE))
			    AND (#{dateTo, jdbcType=DATE} is null or #{dateTo, jdbcType=DATE} >= cast(pv.WORK_DATE as DATE))
		]]>
	</select>
</mapper>
