<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ru.armd.pbk.mappers.viss.calc.CalcMapper">

    <select id="createSchema">        
        <![CDATA[
        	CREATE SCHEMA ${schema} AUTHORIZATION PBK_USER		
			
			CREATE TABLE ${schema}.ASDU_GTFS_DEPOTS (
			   AGENCY_ID            INT                  NULL,
			   DEPOT_ID             INT                  NULL,
			   DEPOT_NAME           NVARCHAR(256)        NULL,
			   IS_DELETED           BIT                  NULL
			)
			
			CREATE TABLE ${schema}.ASDU_GTFS_TRIPS (
			   ROUTE_ID             INT                  NULL,
			   SERVICE_ID           INT                  NULL,
			   TRIP_ID              INT                  NULL,
			   TRIP_SHORT_NAME      NVARCHAR(32)         NULL,
			   DIRECTION_ID         INT                  NULL,
			   TRIP_TYPE            INT                  NULL
			)
			
			CREATE TABLE ${schema}.ASDU_GTFS_STOP_TIMES (
			   TRIP_ID              INT                  NULL,
			   ARRIVAL_TIME         INT                  NULL,
			   DEPARTURE_TIME       INT                  NULL,
			   STOP_ID              INT                  NULL,
			   STOP_SEQUENCE        INT                  NULL,
			   TRIP_NUM             INT                  NULL,
			   SHIFT_NUM            INT                  NULL,
			   GRAFIC               INT                  NULL,
			   SERVICE_ID			INT					 NULL
			)
			
			CREATE TABLE ${schema}.ASDU_GTFS_CALENDAR (
			   ROUTE_ID             INT                  NULL,
			   SERVICE_ID           INT                  NULL,
			   MONDAY               BIT                  NULL,
			   TUESDAY              BIT                  NULL,
			   WEDNESDAY            BIT                  NULL,
			   THURSDAY             BIT                  NULL,
			   FRIDAY               BIT                  NULL,
			   SATURDAY             BIT                  NULL,
			   SUNDAY               BIT                  NULL,
			   START_DATE           DATE                 NULL,
			   END_DATE             DATE                 NULL
			)
			
			CREATE TABLE ${schema}.ASDU_GTFS_EQUIPMENT (
			   EQUIPMENT_ID         INT                  NULL,
			   IDENTIFICATOR        INT                  NULL,
			   IS_DELETED           BIT                  NULL,
			   VEHICLE_ID           INT                  NULL
			)
			
			CREATE TABLE ${schema}.ASDU_GTFS_STOPS (
			   STOP_ID              INT                  NULL,
			   STOP_NAME            NVARCHAR(256)        NULL,
			   STOP_LAT             NUMERIC(20,16)       NULL,
			   STOP_LON             NUMERIC(20,16)       NULL,
			   IS_DELETED           BIT                  NULL
			)
			
			CREATE TABLE ${schema}.ASDU_GTFS_VEHICLE (
			   VEHICLE_ID           BIGINT               NULL,
			   DEPOT_ID             INT                  NULL,
			   DEPOT_NUMBER         INT                  NULL,
			   ROUTE_TYPE           NVARCHAR(8)          NULL,
			   IS_DELETED           BIT                  NULL
			)
			
			CREATE TABLE ${schema}.ASDU_GTFS_VEHICLE_TASK (
			   ROUTE_ID             INT                  NULL,
			   VEHICLE_ID           INT                  NULL,
			   GRAFIC               INT                  NULL,
			   SHIFT_NUM            INT                  NULL,
			   START_TIME           INT                  NULL,
			   END_TIME             INT                  NULL
			)
			
			CREATE TABLE ${schema}.ASDU_FT_TELEMATICS (
			   POINT_TIME           DATETIME             NULL,
			   EQUIPMENT_ID         INT                  NULL,
			   POINT_LATITUDE       NUMERIC(20,16)       NULL,
			   POINT_LONGITUDE      NUMERIC(20,16)       NULL
			)
			
			CREATE TABLE ${schema}.ASKP_TICKET_CHECKS (
			   ROUTE_ID             NUMERIC(19)          NULL,
			   ASKP_ROUTE_CODE      NVARCHAR(32)         NULL,
			   MOVE_CODE            NVARCHAR(32)         NOT NULL,
			   TICKET_ID            NUMERIC(19)          NOT NULL,
			   CHECK_TIME           DATETIME             NOT NULL,
			   ASKP_CHECK_ID        NVARCHAR(32)         NULL
			)  
        ]]>        
    </select>
    
    <select id="isSchemaExists" resultType="boolean">
    	<![CDATA[
    		SELECT CASE WHEN EXISTS (SELECT 1 FROM sys.schemas WHERE name = #{schema}) 
    		THEN 1 ELSE 0 END
    	]]>
    </select>
    
</mapper>