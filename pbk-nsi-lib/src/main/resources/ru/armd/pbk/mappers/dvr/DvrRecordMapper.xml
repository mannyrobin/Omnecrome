<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ru.armd.pbk.mappers.dvr.DvrRecordMapper">

	<select id="getGridViews" resultType="ru.armd.pbk.views.nsi.dvr.DvrRecordView" parameterType="ru.armd.pbk.core.views.BaseGridViewParams" >
        <include refid="ru.armd.pbk.mappers.CommonSql.pageSupportBegin" />
        <![CDATA[
			select 
    			ID as id    			
		    	, [DATE_RECORD] as dateRecord
				, [DATE_SESSION] as dateSession
				, [DESCRIPTION_RECORD] as descriptionSession
				, [DESCRIPTION_SESSION] as desecriptionRecord 
				, [DEVICE_ID] as deviceId
				, [DURATION] as duration
				, [FILE_SIZE] as fileSize
				, [MIME] as mime
				, [DVR_ID] as dvrId
				, [STORE_ID] as storeId
				, [OWNER_NAME] as ownerName
				, [URL] as url       
            from PBK_VIS.DVR_RECORDS 		
            where #{filter.dvrHeadId} is not null and DEVICE_ID = #{filter.dvrHeadId} 
        ]]>
        <include refid="ru.armd.pbk.mappers.CommonSql.pageSupportEnd" />
    </select>
	
    
	<insert id="insert" parameterType="ru.armd.pbk.domain.dvr.DvrRecord" keyProperty="id" keyColumn="id">
        <![CDATA[
        insert into PBK_VIS.DVR_RECORDS(        	
			[DATE_RECORD]
			, [DATE_SESSION]
			, [DESCRIPTION_RECORD] 
			, [DESCRIPTION_SESSION] 
			, [DEVICE_ID] 
			, [DURATION] 
			, [FILE_SIZE] 
			, [MIME] 
			, [DVR_ID] 
			, [STORE_ID]
			, [OWNER_NAME] 
			, [URL]
			, [TASK_ID]
        ) VALUES(
        	#{dateRecord}
			, #{dateSession}
			, #{descriptionSession}
			, #{desecriptionRecord}
        	, #{deviceId}
			, #{duration}
			, #{fileSize}			
			, #{mime}
			, #{dvrId}		
			, #{storeId}
			, #{ownerName}
			, #{url}
			, #{taskId})
        ]]>
        <selectKey order="AFTER" resultType="long" keyProperty="id">
            <![CDATA[
              SELECT IDENT_CURRENT( 'PBK_VIS.DVR_RECORDS' ) as id
            ]]>
        </selectKey>
    </insert>
    
    <select id="getDomain" resultType="ru.armd.pbk.domain.dvr.DvrRecord">
    		select 
    			ID as id    			
		    	, [DATE_RECORD] as dateRecord
				, [DATE_SESSION] as dateSession
				, [DESCRIPTION_RECORD] as descriptionSession
				, [DESCRIPTION_SESSION] as desecriptionRecord 
				, [DEVICE_ID] as deviceId
				, [DURATION] as duration
				, [FILE_SIZE] as fileSize
				, [MIME] as mime
				, [DVR_ID] as dvrId
				, [STORE_ID] as storeId
				, [OWNER_NAME] as ownerName
				, [URL] as url    	            
            from PBK_VIS.DVR_RECORDS 
            where (#{dvrId} is not null and #{dvrId} = DVR_ID)
            	and (#{deviceId} is not null and #{deviceId} = DEVICE_ID)
    </select>
    
    <update	id="bind">
    	<![CDATA[
    	UPDATE [PBK_VIS].DVR_RECORDS 
			SET TASK_ID = #{taskId} 
			WHERE TASK_ID is null AND ID in ( 
			SELECT r.ID 
			FROM [PBK_TASK].[TASKS] t 
			JOIN [PBK_PLAN].[PLAN_SCHEDULES] ps on ps.ID = t.PLAN_SCHEDULE_ID 
			JOIN [PBK_NSI].[EMPLOYEE_HISTS] e on (e.HEAD_ID = ps.EMPLOYEE_ID and e.FOR_PLAN_USE = 1 and cast(ps.WORK_DATE as date) between cast(e.V_START_DATE as date) and cast(e.V_END_DATE as date))	
			JOIN [PBK_VIS].DVR_RECORDS r on (UPPER(r.OWNER_NAME) like (e.SURNAME + ' ' + e.NAME + ' ' + e.PATRONUMIC) and cast(r.DATE_RECORD as date) = cast(ps.[WORK_DATE] as date)) 
			WHERE t.ID = #{taskId})			
		]]>
    </update>
    
</mapper>